<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UKaRBtA4qolBhzrq0Z4aVFODMo00gMZRTQw61FGP9tSgmhqUaaQBNI5qYtChjnq0pwbV1KBMIw2gcVQT
        gw511KM9NaimBmUaaQCNo5oYdKijHu2pQTU1KNNIA2gc1cSgQx31aE8NqqlBmUYaQOOoJgYd6qhHe2pQ
        TQ3KNNIAGkc1MehQRz3aU4NqalCmkQbQOKqJQYc66tGeGlRTgzKNiRtARLQrDSBiDUsDiFjD0gAi1rA0
        gIg1LA0gYg1LA4hYw9IAItawdedtnv8NfSAiVrnN82+XBvBz/GBErGrrN8+/vG79zNzt9MGIWN1G9/4t
        686f3fmB9TPz79AnRMTqVO75f9iy4+/XlTH6fxbokyJidRo9/D+6ePOXsXHjxvedt3n+EfrEiFht5r6/
        e/fuv3vv9n93LDaBmblj+XYgYnUq93b5yv9XN//Z44Ob5t8/ejRwa/kJ4fqZud9SUES0odzD793Lt/zf
        9/wZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZ
        GRkZGRkDHuvW/S+15Vsaq6jX8QAAAABJRU5ErkJggg==
</value>
  </data>
</root>